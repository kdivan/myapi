{
    "swagger": "2.0",
    "info": {
        "title": "Ma premiere api laravel",
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at <a href=\"http://swagger.io\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \"special-key\" to test the authorization filters",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "email": "airskual@yahoo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "myapi.com",
    "basePath": "/",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/distributeur": {
            "get": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Display a list of distributeurs.",
                "description": "This can only be done by the logged in user.",
                "operationId": "getDistributeur",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Distributeur"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "distributeur"
                ],
                "summary": "add 1 distributeur.",
                "description": "This is to insert a distributor",
                "operationId": "addDistributeur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "the field name you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "telephone",
                        "in": "formData",
                        "description": "the field telephone you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "adresse",
                        "in": "formData",
                        "description": "the field adresse you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cpostal",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ville",
                        "in": "formData",
                        "description": "the field ville you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pays",
                        "in": "formData",
                        "description": "the field pays you want to update",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Distributeur"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/distributeur/{distributeurId}": {
            "get": {
                "tags": [
                    "distributeur"
                ],
                "summary": "show 1 row",
                "description": "Show one row of distributor",
                "operationId": "getDistributeurById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "distributeurId",
                        "in": "path",
                        "description": "ID of distributor that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Distributeur"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Distributeur not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Update an existing distributeur",
                "description": "",
                "operationId": "updateDistributeur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "distributeurId",
                        "in": "path",
                        "description": "Update the information of a distributeur",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "the field nom you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "telephone",
                        "in": "formData",
                        "description": "the field telephone you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "adresse",
                        "in": "formData",
                        "description": "the field adresse you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cpostal",
                        "in": "formData",
                        "description": "the field cpostal you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ville",
                        "in": "formData",
                        "description": "the field ville you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pays",
                        "in": "formData",
                        "description": "the field pays you want to update",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Distributeur"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Distributeur not found"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:distributeur",
                            "read:distributeur"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "distributeur"
                ],
                "summary": "Delete distributeur order by ID",
                "description": "Delete a distributeur with his ID",
                "operationId": "deleteDistributeur",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "distributeurId",
                        "in": "path",
                        "description": "ID of the distributeur that needs to be deleted",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/film": {
            "get": {
                "tags": [
                    "film"
                ],
                "summary": "Display a list of films.",
                "description": "This can only be done by the logged in user.",
                "operationId": "getFilm",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "film"
                ],
                "summary": "add 1 film.",
                "description": "This is to insert a film",
                "operationId": "addFilm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "titre",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "id_genre",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_distributeur",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "resum",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_debut_affiche",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_fin_affiche",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duree_minutes",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "annee_production",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/film/{filmId}": {
            "get": {
                "tags": [
                    "film"
                ],
                "summary": "show 1 row",
                "description": "Show one row",
                "operationId": "getFilmById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filmId",
                        "in": "path",
                        "description": "ID of film that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Film not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "film"
                ],
                "summary": "Update an existing film",
                "description": "",
                "operationId": "updateFilm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filmId",
                        "in": "path",
                        "description": "Film object that needs to be added to the store",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "titre",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_genre",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_distributeur",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "resum",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_debut_affiche",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_fin_affiche",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duree_minutes",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "annee_production",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Film not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "film"
                ],
                "summary": "Delete purchase order by ID",
                "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                "operationId": "deleteFilm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filmId",
                        "in": "path",
                        "description": "ID of the order that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/film/getFilmWithGenre/{id}": {
            "get": {
                "tags": [
                    "film"
                ],
                "summary": "Finds film with genre",
                "description": "return a film with genre",
                "operationId": "getFilmWithGenre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Id supplied"
                    },
                    "404": {
                        "description": "genre not found"
                    }
                }
            }
        },
        "/genre": {
            "get": {
                "tags": [
                    "genre"
                ],
                "summary": "Display a list of genres.",
                "description": "This can only be done by the logged in user.",
                "operationId": "getGenre",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Genre"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "genre"
                ],
                "summary": "add a single genre.",
                "description": "This is to insert a genre",
                "operationId": "addGenre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "the name of the field you want to update",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Genre"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/genre/{genreId}": {
            "get": {
                "tags": [
                    "genre"
                ],
                "summary": "show 1 row",
                "description": "Show one row",
                "operationId": "getGenreById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "genreId",
                        "in": "path",
                        "description": "ID of genre that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Genre"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Genre not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "genre"
                ],
                "summary": "Update an existing genre",
                "description": "",
                "operationId": "updateGenre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "genreId",
                        "in": "path",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Genre"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Genre not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "genre"
                ],
                "summary": "Delete genre by ID",
                "operationId": "deleteGenre",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "genreId",
                        "in": "path",
                        "description": "ID of the genre that needs to be deleted",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/genre/getFilmsForGenre/{id}": {
            "get": {
                "tags": [
                    "genre"
                ],
                "summary": "Finds film for genre",
                "description": "return a list of film for genre",
                "operationId": "getFilmsForGenre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Id supplied"
                    },
                    "404": {
                        "description": "genre not found"
                    }
                }
            }
        },
        "/reduction": {
            "get": {
                "tags": [
                    "reduction"
                ],
                "summary": "Display a list of reductions.",
                "description": "This can only be done by the logged in user.",
                "operationId": "getReduction",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reduction"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "reduction"
                ],
                "summary": "add 1 reduction",
                "description": "This is to insert a reduction",
                "operationId": "addReduction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_debut",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_fin",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pourcentage_reduction",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reduction"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/reduction/{reductionId}": {
            "get": {
                "tags": [
                    "reduction"
                ],
                "summary": "show 1 row",
                "description": "Show one row",
                "operationId": "getReductionById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reductionId",
                        "in": "path",
                        "description": "ID of reduction that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reduction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Reduction not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "reduction"
                ],
                "summary": "Update an existing reduction",
                "description": "",
                "operationId": "updateReduction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nom",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_debut",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_fin",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pourcentage_reduction",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reduction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Film not found"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:reductions",
                            "read:reductions"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "reduction"
                ],
                "summary": "Delete reduction by ID",
                "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                "operationId": "deleteReduction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reductionId",
                        "in": "path",
                        "description": "ID of the reduction that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/salle": {
            "get": {
                "tags": [
                    "salle"
                ],
                "summary": "Display a list of salles.",
                "description": "This can only be done by the logged in user.",
                "operationId": "getSalle",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Salle"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salle"
                ],
                "summary": "Add a new salle.",
                "description": "This is to insert a salle",
                "operationId": "addSalle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numero_salle",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "nom_salle",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "etage_salle",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "places",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/seance": {
            "get": {
                "tags": [
                    "seance"
                ],
                "summary": "Display a list of seances.",
                "description": "This can only be done by the logged in user.",
                "operationId": "getSeance",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Seance"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "seance"
                ],
                "summary": "Add a new seance.",
                "description": "This is to insert a film",
                "operationId": "addSeance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id_film",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "id_salle",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_personne_ouvreur",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_personne_technicien",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_personne_menage",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "debut_seance",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "fin_seance",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Seance"
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/seance/{seanceId}": {
            "get": {
                "tags": [
                    "seance"
                ],
                "summary": "Show 1 row",
                "description": "Show one row",
                "operationId": "getSeanceById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "seanceId",
                        "in": "path",
                        "description": "ID of seance that needs to be fetched",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Seance"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Film not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "seance"
                ],
                "summary": "Update an existing seance",
                "description": "",
                "operationId": "update seance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "seanceId",
                        "in": "path",
                        "description": "Seance object",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_film",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_salle",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_personne_ouvreur",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id_personne_technicien",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id_personne_menage",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "debut_seance",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fin_seance",
                        "in": "formData",
                        "description": "the fields you want to update",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Film"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Film not found"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:films",
                            "read:films"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "seance"
                ],
                "summary": "Delete seance by id",
                "operationId": "deleteSeance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reductionId",
                        "in": "path",
                        "description": "ID of the reduction that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Distributeur": {
            "required": [
                "id_distributeur",
                "nom",
                "telephone"
            ],
            "properties": {
                "id_distributeur": {
                    "type": "integer",
                    "format": "int64",
                    "default": 4554
                },
                "nom": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "adresse": {
                    "type": "string"
                },
                "cpostal": {
                    "type": "integer"
                },
                "ville": {
                    "type": "string"
                },
                "pays": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Distributeur"
            }
        },
        "Film": {
            "required": true,
            "properties": {
                "id_film": {
                    "type": "integer",
                    "format": "int64",
                    "default": 4554
                },
                "titre": {
                    "type": "string"
                },
                "id_genre": {
                    "type": "integer"
                },
                "id_distributeur": {
                    "type": "integer"
                },
                "resum": {
                    "type": "string"
                },
                "date_debut_affiche": {
                    "type": "date",
                    "default": "2011-01-12"
                },
                "date_fin_affiche": {
                    "type": "date",
                    "format": "date",
                    "default": "2011-01-12"
                },
                "duree_minutes": {
                    "type": "integer",
                    "default": 180
                },
                "annee_production": {
                    "type": "integer",
                    "default": 2011
                }
            },
            "xml": {
                "name": "Film"
            }
        },
        "Genre": {
            "required": true,
            "properties": {
                "id_film": {
                    "type": "integer",
                    "format": "int64",
                    "default": 4554
                },
                "titre": {
                    "type": "string",
                    "default": "Erotic"
                }
            },
            "xml": {
                "name": "Genre"
            }
        },
        "Salle": {
            "required": true,
            "properties": {
                "id_salle": {
                    "type": "integer",
                    "format": "int64"
                },
                "numero_salle": {
                    "type": "integer"
                },
                "nom_salle": {
                    "type": "string"
                },
                "etage_salle": {
                    "type": "integer"
                },
                "places": {
                    "type": "integer"
                }
            },
            "xml": {
                "name": "Salles"
            }
        }
    }
}